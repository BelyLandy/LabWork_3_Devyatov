//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.11.2
//     from Assets/PlayerInputActions/PlayerInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInput: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInput"",
    ""maps"": [
        {
            ""name"": ""Gameplay"",
            ""id"": ""fca1dd4d-6da7-480e-93f5-685376ee17ce"",
            ""actions"": [
                {
                    ""name"": ""MoveCellUp"",
                    ""type"": ""Button"",
                    ""id"": ""ebbb2246-3568-4231-8938-4fe85ea4622b"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MoveCellLeft"",
                    ""type"": ""Button"",
                    ""id"": ""26d458b2-efe2-4917-b526-356ae4ab9814"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MoveCellDown"",
                    ""type"": ""Button"",
                    ""id"": ""95e85ea2-7065-4d41-9de0-f4b754e24559"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MoveCellRight"",
                    ""type"": ""Button"",
                    ""id"": ""4b24ab0c-b80a-418c-bf0b-e1052cb8acbc"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MoveWithSwipe"",
                    ""type"": ""Value"",
                    ""id"": ""5c4da2ad-d572-4983-aa72-4969b06fa2d2"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""FullscreenOrWindowedMode"",
                    ""type"": ""Button"",
                    ""id"": ""30fdb0e5-5a84-4dac-9860-5c1b463c09e4"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""QuitApplication"",
                    ""type"": ""Button"",
                    ""id"": ""37b8a927-3e85-47a8-aa16-2ade4a9017b6"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""67085993-a491-4f0f-a42c-e46b92892c0b"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveCellUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a933c533-cafb-481f-aa44-40fc094a7d3c"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveCellUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2b2c18d8-44ed-4ee1-a5a3-3a48cd41b8d2"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveCellLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0ffdb85c-8b87-465b-8279-ff3f0983c49b"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveCellLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d14b79ba-ff66-4743-971e-ed5b14a4ff1e"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveCellDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""35db936d-61f4-4471-87af-74a5ad57c95a"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveCellDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8c03400e-0bc8-44ec-b6ef-4357a5c31465"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveCellRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4ab95156-56d9-427b-8481-23ef173632c6"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveCellRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""463cc5c7-93f7-405c-8e10-1442c5dfbe08"",
                    ""path"": ""<Touchscreen>/primaryTouch/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveWithSwipe"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a2ab7af3-9b25-4186-86c9-42f55a98b409"",
                    ""path"": ""<Pointer>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveWithSwipe"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""eb9b63d2-1e0f-44f6-95db-3b2471fa593b"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FullscreenOrWindowedMode"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fec74ae0-0a64-49c5-8b3b-5e70626a899a"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""QuitApplication"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Gameplay
        m_Gameplay = asset.FindActionMap("Gameplay", throwIfNotFound: true);
        m_Gameplay_MoveCellUp = m_Gameplay.FindAction("MoveCellUp", throwIfNotFound: true);
        m_Gameplay_MoveCellLeft = m_Gameplay.FindAction("MoveCellLeft", throwIfNotFound: true);
        m_Gameplay_MoveCellDown = m_Gameplay.FindAction("MoveCellDown", throwIfNotFound: true);
        m_Gameplay_MoveCellRight = m_Gameplay.FindAction("MoveCellRight", throwIfNotFound: true);
        m_Gameplay_MoveWithSwipe = m_Gameplay.FindAction("MoveWithSwipe", throwIfNotFound: true);
        m_Gameplay_FullscreenOrWindowedMode = m_Gameplay.FindAction("FullscreenOrWindowedMode", throwIfNotFound: true);
        m_Gameplay_QuitApplication = m_Gameplay.FindAction("QuitApplication", throwIfNotFound: true);
    }

    ~@PlayerInput()
    {
        UnityEngine.Debug.Assert(!m_Gameplay.enabled, "This will cause a leak and performance issues, PlayerInput.Gameplay.Disable() has not been called.");
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Gameplay
    private readonly InputActionMap m_Gameplay;
    private List<IGameplayActions> m_GameplayActionsCallbackInterfaces = new List<IGameplayActions>();
    private readonly InputAction m_Gameplay_MoveCellUp;
    private readonly InputAction m_Gameplay_MoveCellLeft;
    private readonly InputAction m_Gameplay_MoveCellDown;
    private readonly InputAction m_Gameplay_MoveCellRight;
    private readonly InputAction m_Gameplay_MoveWithSwipe;
    private readonly InputAction m_Gameplay_FullscreenOrWindowedMode;
    private readonly InputAction m_Gameplay_QuitApplication;
    public struct GameplayActions
    {
        private @PlayerInput m_Wrapper;
        public GameplayActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @MoveCellUp => m_Wrapper.m_Gameplay_MoveCellUp;
        public InputAction @MoveCellLeft => m_Wrapper.m_Gameplay_MoveCellLeft;
        public InputAction @MoveCellDown => m_Wrapper.m_Gameplay_MoveCellDown;
        public InputAction @MoveCellRight => m_Wrapper.m_Gameplay_MoveCellRight;
        public InputAction @MoveWithSwipe => m_Wrapper.m_Gameplay_MoveWithSwipe;
        public InputAction @FullscreenOrWindowedMode => m_Wrapper.m_Gameplay_FullscreenOrWindowedMode;
        public InputAction @QuitApplication => m_Wrapper.m_Gameplay_QuitApplication;
        public InputActionMap Get() { return m_Wrapper.m_Gameplay; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GameplayActions set) { return set.Get(); }
        public void AddCallbacks(IGameplayActions instance)
        {
            if (instance == null || m_Wrapper.m_GameplayActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_GameplayActionsCallbackInterfaces.Add(instance);
            @MoveCellUp.started += instance.OnMoveCellUp;
            @MoveCellUp.performed += instance.OnMoveCellUp;
            @MoveCellUp.canceled += instance.OnMoveCellUp;
            @MoveCellLeft.started += instance.OnMoveCellLeft;
            @MoveCellLeft.performed += instance.OnMoveCellLeft;
            @MoveCellLeft.canceled += instance.OnMoveCellLeft;
            @MoveCellDown.started += instance.OnMoveCellDown;
            @MoveCellDown.performed += instance.OnMoveCellDown;
            @MoveCellDown.canceled += instance.OnMoveCellDown;
            @MoveCellRight.started += instance.OnMoveCellRight;
            @MoveCellRight.performed += instance.OnMoveCellRight;
            @MoveCellRight.canceled += instance.OnMoveCellRight;
            @MoveWithSwipe.started += instance.OnMoveWithSwipe;
            @MoveWithSwipe.performed += instance.OnMoveWithSwipe;
            @MoveWithSwipe.canceled += instance.OnMoveWithSwipe;
            @FullscreenOrWindowedMode.started += instance.OnFullscreenOrWindowedMode;
            @FullscreenOrWindowedMode.performed += instance.OnFullscreenOrWindowedMode;
            @FullscreenOrWindowedMode.canceled += instance.OnFullscreenOrWindowedMode;
            @QuitApplication.started += instance.OnQuitApplication;
            @QuitApplication.performed += instance.OnQuitApplication;
            @QuitApplication.canceled += instance.OnQuitApplication;
        }

        private void UnregisterCallbacks(IGameplayActions instance)
        {
            @MoveCellUp.started -= instance.OnMoveCellUp;
            @MoveCellUp.performed -= instance.OnMoveCellUp;
            @MoveCellUp.canceled -= instance.OnMoveCellUp;
            @MoveCellLeft.started -= instance.OnMoveCellLeft;
            @MoveCellLeft.performed -= instance.OnMoveCellLeft;
            @MoveCellLeft.canceled -= instance.OnMoveCellLeft;
            @MoveCellDown.started -= instance.OnMoveCellDown;
            @MoveCellDown.performed -= instance.OnMoveCellDown;
            @MoveCellDown.canceled -= instance.OnMoveCellDown;
            @MoveCellRight.started -= instance.OnMoveCellRight;
            @MoveCellRight.performed -= instance.OnMoveCellRight;
            @MoveCellRight.canceled -= instance.OnMoveCellRight;
            @MoveWithSwipe.started -= instance.OnMoveWithSwipe;
            @MoveWithSwipe.performed -= instance.OnMoveWithSwipe;
            @MoveWithSwipe.canceled -= instance.OnMoveWithSwipe;
            @FullscreenOrWindowedMode.started -= instance.OnFullscreenOrWindowedMode;
            @FullscreenOrWindowedMode.performed -= instance.OnFullscreenOrWindowedMode;
            @FullscreenOrWindowedMode.canceled -= instance.OnFullscreenOrWindowedMode;
            @QuitApplication.started -= instance.OnQuitApplication;
            @QuitApplication.performed -= instance.OnQuitApplication;
            @QuitApplication.canceled -= instance.OnQuitApplication;
        }

        public void RemoveCallbacks(IGameplayActions instance)
        {
            if (m_Wrapper.m_GameplayActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IGameplayActions instance)
        {
            foreach (var item in m_Wrapper.m_GameplayActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_GameplayActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public GameplayActions @Gameplay => new GameplayActions(this);
    public interface IGameplayActions
    {
        void OnMoveCellUp(InputAction.CallbackContext context);
        void OnMoveCellLeft(InputAction.CallbackContext context);
        void OnMoveCellDown(InputAction.CallbackContext context);
        void OnMoveCellRight(InputAction.CallbackContext context);
        void OnMoveWithSwipe(InputAction.CallbackContext context);
        void OnFullscreenOrWindowedMode(InputAction.CallbackContext context);
        void OnQuitApplication(InputAction.CallbackContext context);
    }
}
